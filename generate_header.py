import re
import yitizi
import pinyin
import urllib.request
import json


CHARLIST_JSON_URL = 'https://words.hk/faiman/analysis/charlist.json'

# Converts charlist.json (credit to https://words.hk/faiman/analysis/charlist/) to a 2D string array literal 
# in jyutping.h, so that the pronunciations are directly compiled into the executable

class Honzi:
    def __init__(self, char, jyutpings, pinyin):
            self.char = char
            jyutpings = [(jyutping[0], jyutping[1]) for jyutping in jyutpings]
            self.jyutpings = jyutpings
            self.jyutpings.sort(key=lambda x: x[1], reverse=True) # sort by 'commonality' score
            self.pinyin = pinyin

    def __lt__(self, other):
        return self.char < other.char

with urllib.request.urlopen(CHARLIST_JSON_URL) as url:
    charlist = json.load(url)
    honzis = []
    chars_so_far = set()
    for char in charlist:
        jyutpings = []
        for jyutping in charlist[char]:
            commonality_score = charlist[char][jyutping]
            jyutpings += [(jyutping, commonality_score)]
            
        honzis += [Honzi(char=char, jyutpings=jyutpings, pinyin=pinyin.get(char))]
        chars_so_far.add(char)
        
        variants = yitizi.get(char) 
        for variant in variants:
            if (variant not in chars_so_far): # prevent duplicates
                honzis.append(Honzi(variant, jyutpings, pinyin.get(char)))
                chars_so_far.add(variant)

honzis.sort(key=lambda x: x.char, reverse=False) # sort by unicode

# Generate jyutping.h or constants.rs with [honzis]
out = \
f"""
/*********************************************
*
*\tAUTOGENERATED BY generate_header.py
*\tJYUTPING FROM {CHARLIST_JSON_URL}
*\tCHARACTER VARIANTS DERIVED FROM yitizi
*
**********************************************/

"""
out += "pub const DICT_LENGTH: usize = " + str(len(honzis)) + ";\n"
out += "pub const DICT: [[&str; 3];" + " DICT_LENGTH" + "] =\n[\n"
for honzi in honzis:
    out += "\t[ "
    out += "\"" + honzi.char + "\"" + ", "
    out += "\"" + ":".join([jyutping[0] for jyutping in honzi.jyutpings]) + "\"" + ", "
    out += "\"" + honzi.pinyin + "\""
    out += "],\n"
out = out[0:len(out) - 2] + "\n" # remove extra ',' and replace newline
out += "];"
with open('constants.rs', "w") as file:
    file.write(out)
